{"version":3,"sources":["serviceWorker.js","constants.js","utility.js","actions/actions.js","reducers/Fetcher.js","actions/myApiActions.js","reducers/Favorite.js","reducers/CategoriesFetcher.js","reducers/TitleFetcher.js","reducers/commentsGetter.js","reducers/rootReducer.js","reducers/TokenGetter.js","reducers/userNameGetter.js","reducers/ErrorHandler.js","Components/ButtonBar/ButtonBar.jsx","Components/List/AnimeCard.jsx","Components/List/AnimeList.jsx","Components/List/FavoritesList.jsx","Components/dropDown.jsx","Components/Header.jsx","Components/List/Categories.jsx","Components/commentsSec/comment.jsx","Components/commentsSec/PostForm.jsx","Components/commentsSec/CommentsSec.jsx","Components/Title.jsx","Components/auth/RegWindow.jsx","Components/auth/LoginWindow.jsx","Components/messageModal/MessageModal.jsx","Components/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","queryParts","myApiEND","apiEND","fetchHeader","method","headers","debounce","func","delay","inDebounce","context","this","args","arguments","clearTimeout","setTimeout","apply","saveFavsToServ","token","favs","fetch","mode","body","JSON","stringify","getAnime","query","url","dispatch","a","type","payload","data","pending","response","json","offset","console","error","toggleFav","item","newFavs","find","i","id","filter","push","getTitle","log","Error","initialState","loadedData","pendingMore","getToken","getUserByToken","resp","name","userName","getComments","comments","getError","msg","title","rootReducer","combineReducers","results","state","action","concat","favorites","categories","connect","getPop","getTop","getAir","getByName","props","searchRef","useRef","className","ref","placeholder","onChange","current","value","style","cursor","onClick","AnimeCard","children","more","getMoreRes","getMore","addFav","getTit","backgroundColor","margin","marginTop","map","key","undefined","color","length","attributes","canonicalTitle","to","src","posterImage","medium","alt","borderCollapse","border","width","averageRating","Dropdown","document","cookie","reload","getLcStr","parse","localStorage","getItem","getCat","useState","showDropDown","setDropDown","useEffect","navRef","categ","search","catName","description","Comment","from","comment","setComment","onSubmit","e","preventDefault","then","err","cols","rows","target","counter","setCounter","reversed","setReversed","reverse","slice","_id","titleId","trailer","setTrailer","pathname","split","pop","popularityRank","ageRating","episodeCount","status","synopsis","youtubeVideoId","getUserName","nickname","setNickname","password","setPassword","password2","setPassword2","history","useHistory","handleSubmit","user","pw","message","htmlFor","required","setName","setPw","setError","getFavs","getFavorites","errModal","setErrModal","exact","path","FavoritesList","store","createStore","applyMiddleware","logger","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"6hBAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mCClBOC,EACD,mCADCA,EAEG,iBAFHA,EAGC,eAHDA,EAIC,mBAJDA,EAKA,uBALAA,EAMD,8CANCA,EAOG,GAPHA,EASA,iBATAA,EAUG,2FAVHA,EAWD,0HAXCA,EAYI,sBAZJA,EAcG,kBAKHC,EAAW,+CAEXC,EAbA,gBAa8BF,EAAwBA,EAUtDG,EAAc,CACvBC,OAAQ,MACRC,QAAS,CACL,OAAU,2BACV,eAAgB,6BCjCXC,EAAW,SAACC,EAAMC,GAE7B,IAAIC,EACJ,OAAO,WACL,IAAMC,EAAUC,KACVC,EAAOC,UACbC,aAAaL,GACbA,EAAaM,YAAW,kBAAMR,EAAKS,MAAMN,EAASE,KAAOJ,KAIhDS,EAAiB,SAACC,EAAOC,GACpCC,MAAMnB,EAAW,WAAY,CAC3BG,OAAQ,OACRiB,KAAM,OACNhB,QAAS,CACP,cAAgB,UAAhB,OAA2Ba,GAC3B,eAAgB,oBAElBI,KAAMC,KAAKC,UAAU,CAAEL,KAAMA,OCVpBM,EAAW,SAACC,GACrB,IAAMC,EAAM3B,EAAoB0B,EAAQxB,EACxC,8CAAO,WAAM0B,GAAN,iBAAAC,EAAA,6DACHD,EAAS,CACLE,KARa,YASbC,QAAS,CACLC,KAAM,GACNL,IAAK,GACLM,SAAS,KANd,kBAUwBb,MAAMO,EAAKxB,GAVnC,cAUO+B,EAVP,gBAWoBA,EAASC,OAX7B,OAWOA,EAXP,OAYCP,EAAS,CACLE,KAnBS,YAoBTC,QAAS,CACLC,KAAMG,EAAKH,KACXL,IAAKA,EACLM,SAAS,EACTG,OAAQpC,KAlBjB,kDAuBCqC,QAAQC,MAAR,MAvBD,0DAAP,uDAuDSC,EAAY,SAACC,EAAMtB,EAAOC,GACnC,IAAMsB,EAAUtB,EAChB,OAAKA,EAAKuB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAKI,OAS9B3B,EAAeC,EAAOuB,EAAQI,QAAO,SAAAF,GAAC,OAAIA,EAAEC,KAAOJ,EAAKI,OACjD,CACHd,KA5EmB,kBA6EnBC,QAASU,EAAQI,QAAO,SAAAF,GAAC,OAAIA,EAAEC,KAAOJ,EAAKI,SAX/CH,EAAQK,KAAKN,GACbvB,EAAeC,EAAOuB,GACf,CACHX,KArEmB,kBAsEnBC,QAASU,KAqCRM,EAAW,SAACH,GACrB,8CAAO,WAAMhB,GAAN,iBAAAC,EAAA,6DACHD,EAAS,CACLE,KA3Ga,YA4GbC,QAAS,CACLa,GAAIA,EACJX,SAAS,EACTD,KAAM,MANX,kBAUwBZ,MAAMpB,EAAoBA,EAAsB4C,EAAK5C,EAAoBA,EAAuBG,GAVxH,cAUO+B,EAVP,gBAWoBA,EAASC,OAX7B,OAWOA,EAXP,OAYCP,EAAS,CACLE,KAtHS,YAuHTC,QAAS,CACLa,GAAIA,EACJX,SAAS,EACTD,KAAMG,EAAKH,KAAK,MAjBzB,kDAsBCK,QAAQW,IAAI,IAAIC,MAAJ,OAtBb,0DAAP,uDC9GEC,EAAe,CACjBvB,IAAK,GACLwB,WAAY,GACZlB,SAAS,EACTmB,aAAa,EACbhB,OAAQ,GCECiB,EAAW,SAACnC,GACrB,MAAO,CACHY,KAViB,YAWjBC,QAASb,IAIJoC,EAAiB,SAACpC,GAC3B,8CAAO,WAAMU,GAAN,iBAAAC,EAAA,+EAEoBT,MAAMnB,EAAW,eAAgB,CAChDG,OAAQ,MACRiB,KAAM,OACNhB,QAAS,CACL,OAAU,mBACV,cAAgB,UAAhB,OAA2Ba,MAPpC,cAEOqC,EAFP,gBAUoBA,EAAKpB,OAVzB,OAUOqB,EAVP,OAWC5B,EAAS,CACLE,KA3Ba,gBA4BbC,QAASyB,EAAKC,WAbnB,kDAiBCpB,QAAQW,IAAI,IAAIC,MAAJ,OAjBb,0DAAP,uDAsBSS,EAAc,SAACd,GACxB,8CAAO,WAAMhB,GAAN,iBAAAC,EAAA,+EAEoBT,MAAMnB,EAAW,eAAiB2C,EAAI,CACrDxC,OAAQ,MACRC,QAAS,CACL,OAAU,sBALnB,cAEOkD,EAFP,gBAQoBA,EAAKpB,OARzB,OAQOH,EARP,OASCJ,EAAS,CACLE,KA/CY,eAgDZC,QAASC,EAAK2B,WAXnB,kDAeCtB,QAAQW,IAAI,IAAIC,MAAJ,OAfb,0DAAP,uDAyCSW,EAAW,SAACC,GACrB,MAAO,CACH/B,KA9EiB,YA+EjBC,QAAS8B,ICjFXX,EAAe,GCFfA,EAAe,GCAfA,EAAe,CACjBY,MAAO,GACP7B,SAAS,EACTW,GAAI,ICFFM,EAAe,GCQRa,EAAcC,YAAgB,CACvCC,QNDmB,WAAmC,IAAlCC,EAAiC,uDAAzBhB,EAAciB,EAAW,uCACrD,OAAQA,EAAOrC,MACX,IDNiB,YCOb,MACI,CACIH,IAAKwC,EAAOpC,QAAQJ,IACpBwB,WAAYgB,EAAOpC,QAAQC,KAC3BC,QAASkC,EAAOpC,QAAQE,QACxBG,OAAQ+B,EAAOpC,QAAQK,QAGnC,IDnBgB,WCoBZ,MACI,CACIT,IAAKwC,EAAOpC,QAAQJ,IACpBwB,WAAYe,EAAMf,WAAWiB,OAAOD,EAAOpC,QAAQC,MACnDoB,YAAae,EAAOpC,QAAQqB,YAC5BhB,OAAQ+B,EAAOpC,QAAQK,QAGnC,QACI,OAAO8B,IMnBfG,UJPoB,WAAmC,IAAlCH,EAAiC,uDAAzBhB,EAAciB,EAAW,uCACtD,OAAQA,EAAOrC,MACX,IHHuB,kBGIvB,IDJqB,gBCIC,OAAOqC,EAAOpC,QACpC,QACI,OAAOmC,IIGfI,WHV6B,WAAmC,IAAlCJ,EAAiC,uDAAzBhB,EAAciB,EAAW,uCAC/D,OAAQA,EAAOrC,MACX,IJFsB,iBIGlB,OAAOqC,EAAOpC,QAElB,QACI,OAAOmC,IGKfJ,MFPwB,WAAmC,IAAlCI,EAAiC,uDAAzBhB,EAAciB,EAAW,uCAC1D,OAAQA,EAAOrC,MACX,ILFiB,YKGb,MACI,CACIc,GAAIuB,EAAOpC,QAAQa,GACnBX,QAASkC,EAAOpC,QAAQE,QACxB6B,MAAOK,EAAOpC,QAAQC,MAGlC,QACI,OAAOkC,IEHfhD,MCXuB,WAAmC,IAAlCgD,EAAiC,uDAFxC,GAE6BC,EAAW,uCACzD,OAAQA,EAAOrC,MACX,INLiB,YMKC,OAAOqC,EAAOpC,QAChC,QAAS,OAAOmC,IDSpBT,SEb0B,WAAmC,IAAlCS,EAAiC,uDAF3C,GAEgCC,EAAW,uCAC5D,OAAQA,EAAOrC,MACX,IPHqB,gBOGC,OAAOqC,EAAOpC,QACpC,QAAS,OAAOmC,IFWpBP,SDb0B,WAAmC,IAAlCO,EAAiC,uDAAzBhB,EAAciB,EAAW,uCAC5D,OAAOA,EAAOrC,MACV,IJHoB,eIGA,OAAOqC,EAAOpC,QAClC,QAAS,OAAOmC,ICWpB5B,MGfwB,WAAmC,IAAlC4B,EAAiC,uDAFzC,GAE8BC,EAAW,uCAC1D,OAAOA,EAAOrC,MACV,IRAiB,YQAA,OAAOqC,EAAOpC,QAC/B,QAAS,OAAOmC,M,2DC6BxB,IAgBeK,cAAQ,MAhBI,SAAC3C,GAC1B,MAAO,CACL4C,OAAQ,kBAAM5C,EAASH,EAASzB,KAChCyE,OAAQ,kBAAM7C,EAASH,EAASzB,KAChC0E,OAAQ,kBAAM9C,EAASH,EAASzB,KAChC2E,UAAW,SAACnB,GAAD,OAAU5B,EAASH,EAAS+B,QAW5Be,EA5Cf,SAAmBK,GACjB,IAAMC,EAAYC,iBAAO,MACzB,OACE,yBAAKC,UAAU,YAAYnC,GAAG,UAC5B,2BACEd,KAAK,OACLiD,UAAU,mBACVC,IAAKH,EACLI,YAAY,eACZC,SAAU5E,GAAS,WACjBsE,EAAMD,UACJ3E,EAAwB6E,EAAUM,QAAQC,SAE3C,OAEL,4BAAQL,UAAU,oBAAoBM,MAAO,CAACC,OAAQ,WAAYC,QAASX,EAAMJ,QAAjF,gBAGA,4BAAQO,UAAU,oBAAoBM,MAAO,CAACC,OAAQ,WAAYC,QAASX,EAAMH,QAAjF,aAGA,4BAAQM,UAAU,oBAAoBM,MAAO,CAACC,OAAQ,WAAYC,QAASX,EAAMF,QAAjF,kB,cC1BS,SAASc,EAAUZ,GAC9B,OACI,yBAAKG,UAAU,aACVH,EAAMa,U,MCuEnB,IAuCelB,eAvCS,SAACL,GACvB,MAAO,CACLD,QAAQ,YAAKC,EAAMD,QAAQd,YAC3BxB,IAAKuC,EAAMD,QAAQtC,IACnBR,KAAK,YAAK+C,EAAMG,WAChBpC,QAASiC,EAAMD,QAAQhC,QACvByD,KAAMxB,EAAMD,QAAQb,YACpBhB,OAAQ8B,EAAMD,QAAQ7B,OACtBlB,MAAOgD,EAAMhD,UAIU,SAACU,GAC1B,MAAO,CACL+D,WAAY,SAAChE,EAAKS,GAAN,OAAiBR,EblDV,SAACD,EAAKS,GACzB,8CAAO,WAAMR,GAAN,iBAAAC,EAAA,6DACHD,EAAS,CACLE,KAzCY,WA0CZC,QAAS,CACLC,KAAM,GACNL,IAAK,GACLyB,aAAa,KANlB,kBAUwBhC,MAAMO,EAAM3B,EAAqBoC,EAAQjC,GAVjE,cAUO+B,EAVP,gBAWoBA,EAASC,OAX7B,OAWOA,EAXP,OAYCP,EAAS,CACLE,KApDQ,WAqDRC,QAAS,CACLC,KAAMG,EAAKH,KACXL,IAAKA,EACLyB,aAAa,EACbhB,OAAQA,EAASpC,KAlB1B,kDAsBSqC,QAAQC,MAAR,MAtBT,kEAAP,sDaiDsCsD,CAAQjE,EAAKS,KACnDyD,OAAQ,SAACrD,EAAMtB,EAAOC,GAAd,OAAuBS,EAASW,EAAUC,EAAMtB,EAAOC,KAC/D2E,OAAQ,SAAClD,GAAD,OAAQhB,EAASmB,EAASH,KAClCc,YAAa,SAACd,GAAD,OAAQhB,EAAS8B,EAAYd,KAC1CgB,SAAU,SAACC,GAAD,OAASjC,EAASgC,EAASC,QAqB1BU,EAzGf,SAAmBK,GACjB,OACE,yBAAKS,MAAO,CAAEU,gBAAiB,YAC7B,yBAAKhB,UAAU,aACZH,EAAM3C,QACL,yBACE8C,UAAU,SACVM,MAAO,CAAEW,OAAQ,OAAQC,UAAW,WAGpCrB,EAAMX,QAAQiC,KAAI,SAAC1D,GAAD,OAChB,kBAAC,EAAD,CAAW2D,IAAK3D,EAAKI,GAAIA,GAAIJ,EAAKI,IAChC,wBAAImC,UAAU,sBACgCqB,IAA3CxB,EAAMzD,KAAKuB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAKI,MAClC,uBACEmC,UAAU,cACVM,MAAO,CAAEgB,MAAO,SAAUf,OAAQ,WAClCC,QAAS,WACoB,IAAvBX,EAAM1D,MAAMoF,OACd1B,EAAMhB,SAAS,8BAGfgB,EAAMiB,OAAOrD,EAAMoC,EAAM1D,MAAO0D,EAAMzD,SAK1C,uBACE4D,UAAU,cACVM,MAAO,CAAEgB,MAAO,SAAUf,OAAQ,WAClCC,QAAS,WACPX,EAAMiB,OAAOrD,EAAMoC,EAAM1D,MAAO0D,EAAMzD,SAI7CqB,EAAK+D,WAAWC,gBAEnB,kBAAC,IAAD,CAAMC,GAAI,sBAAwBjE,EAAKI,IACrC,yBACEmC,UAAU,MACVQ,QAAS,WAAQX,EAAMkB,OAAOtD,EAAKI,IAAKgC,EAAMlB,YAAYlB,EAAKI,KAC/D8D,IAAKlE,EAAK+D,WAAWI,YAAYC,OACjCC,IAAI,WAOjBjC,EAAMc,KACL,yBAAKX,UAAU,SAASM,MAAO,CAAEW,OAAQ,UAEvC,4BACEjB,UAAU,iBACVM,MAAO,CAAEY,UAAW,SACpBV,QAAS,WACPX,EAAMe,WAAWf,EAAMjD,IAAKiD,EAAMxC,UAJtC,iB,MCNV,IAwBemC,eAxBS,SAACL,GACvB,MAAO,CACLG,UAAU,YAAKH,EAAMG,WACrBnD,MAAOgD,EAAMhD,UAIU,SAACU,GAC1B,MAAO,CACLiE,OAAQ,SAACrD,EAAMtB,EAAOC,GAAd,OAAuBS,EAASW,EAAUC,EAAMtB,EAAOC,KAC/D2E,OAAQ,SAAClD,GAAD,OAAQhB,EAASmB,EAASH,KAClCc,YAAa,SAACd,GAAD,OAAQhB,EAAS8B,EAAYd,QAa/B2B,EAzEf,SAAuBK,GAErB,OACE,yBAAKG,UAAU,QACb,2BAAOM,MAAO,CAAEyB,eAAgB,WAAYC,OAAQ,oBAClD,+BACE,wBAAI1B,MAAO,CAAE0B,OAAQ,oBACnB,wBAAI1B,MAAO,CAAE0B,OAAQ,oBAArB,UAGA,wBAAI1B,MAAO,CAAE0B,OAAQ,oBAArB,SAGA,wBAAI1B,MAAO,CAAE0B,OAAQ,oBAArB,WAIDnC,EAAMP,UAAU6B,KAAI,SAAC1D,GAAD,OACnB,wBAAI2D,IAAK3D,EAAKI,GAAIyC,MAAO,CAAE0B,OAAQ,oBACjC,wBAAI1B,MAAO,CAAE0B,OAAQ,kBAAmBC,MAAO,QAC7C,uBACEjC,UAAU,cACVM,MAAO,CAAEgB,MAAO,SAAUf,OAAQ,WAClCC,QAAS,WACPX,EAAMiB,OAAOrD,EAAMoC,EAAM1D,MAAO0D,EAAMP,eAI5C,wBAAIgB,MAAO,CAAE0B,OAAQ,kBAAmBC,MAAO,SAC7C,kBAAC,IAAD,CACEjC,UAAU,mBACV0B,GAAI,sBAAwBjE,EAAKI,IAEjC,wBAAImC,UAAU,QAAQQ,QAAS,WAAOX,EAAMkB,OAAOtD,EAAKI,IAAKgC,EAAMlB,YAAYlB,EAAKI,MACjFJ,EAAK+D,WAAWC,kBAIvB,wBAAInB,MAAO,CAAE0B,OAAQ,kBAAmBC,MAAO,QAC5CxE,EAAK+D,WAAWU,yB,YC9BlBC,MAbf,WAMI,OACI,yBAAKnC,UAAU,YACX,4BAAQA,UAAU,gBAAgBQ,QAPrB,WACjB4B,SAASC,OAAS,0EAClBxH,OAAOC,SAASwH,WAKZ,YCsDZ,IAqBe9C,gBArBS,SAAAL,GACtB,MAAO,CACLV,KAAMU,EAAMT,aAIW,SAAC7B,GAC1B,MAAO,CACL4C,OAAQ,kBAAM5C,EAASH,EAASzB,KAChCsH,SAAU,kBAAM1F,EhBaT,CACHE,KAhFqB,gBAiFrBC,QAAS,CACLZ,KAAMI,KAAKgG,MAAMC,aAAaC,QAAQ,agBf9CC,OAAQ,kBAAM9F,EhBqBd,uCAAO,WAAMA,GAAN,iBAAAC,EAAA,+EAEwBT,MAAMpB,EAAuBG,GAFrD,cAEO+B,EAFP,gBAGoBA,EAASC,OAH7B,OAGOA,EAHP,OAICP,EAAS,CACLE,KAlGc,iBAmGdC,QAASI,EAAKH,OANnB,kDAUCK,QAAQC,MAAR,MAVD,0DAAP,2DgBVWiC,EA5Ef,SAAgBK,GAAQ,IAAD,EACe+C,oBAAS,GADxB,mBACdC,EADc,KACAC,EADA,KAGrBC,qBAAU,WACRlD,EAAMJ,SACNI,EAAM8C,WACL,CAAC9C,IAEJ,IAAMmD,EAASjD,iBAAO,MAiBtB,OACE,yBAAKC,UAAU,UACb,wBAAIA,UAAU,cAAd,sBAEE,uBAAGA,UAAU,cAAcnC,GAAG,OAAO2C,QAlBxB,WAEc,gBAA7BwC,EAAO5C,QAAQJ,UACfgD,EAAO5C,QAAQJ,UAAY,0BAEE,4BAA7BgD,EAAO5C,QAAQJ,YACfgD,EAAO5C,QAAQJ,UAAY,kBAaF,IAAtBH,EAAMpB,KAAK8C,OACV,kBAAC,IAAD,CAAMG,GAAG,2BAA2B1B,UAAU,gBAC5C,0BAAMA,UAAU,oBAAhB,UAEF,4BAAQA,UAAU,eAAeQ,QAblB,WACNsC,GAAfD,KAaQ,0BAAM7C,UAAU,oBAAoBH,EAAMpB,MAC1C,uBAAGuB,UAAU,oBAAoBM,MAAO,CAAEW,OAAQ,SACjD4B,EAAe,kBAAC,EAAD,WAAexB,IAGrC,yBAAKrB,UAAU,cAAcnC,GAAG,MAAMoC,IAAK+C,GACzC,kBAAC,IAAD,CAAMhD,UAAU,oBAAoB0B,GAAG,sBAAvC,kBAGA,kBAAC,IAAD,CAAM1B,UAAU,oBAAoB0B,GAAG,iCAAvC,6BAGA,kBAAC,IAAD,CAAM1B,UAAU,oBAAoB0B,GAAG,gCAAvC,kB,MCpCR,IAkBelC,gBAlBS,SAACL,GACrB,MAAO,CACH8D,MAAO9D,EAAMI,eAIM,SAAA1C,GACvB,MAAO,CACHqG,OAAQ,SAACC,GAAD,OAAatG,EAASH,EAASyG,QAUhC3D,EAhCf,SAAoBK,GAChB,OACI,yBAAKG,UAAU,QACVH,EAAMoD,MAAM9B,KAAI,SAAA1D,GAAI,OACjB,kBAAC,IAAD,CAAMuC,UAAU,aAAaoB,IAAK3D,EAAKI,GAAI6D,GAAG,qBAC9C3C,MAAOtB,EAAK+D,WAAW4B,YACnB5C,QACI,kBAAMX,EAAMqD,OAAOjI,EAAyBwC,EAAK+D,WAAWzC,MAAQ9D,KACvEwC,EAAK+D,WAAWzC,c,YCGtBsE,OAff,SAAiBxD,GACb,OACI,yBAAKG,UAAU,WACX,yBAAKA,UAAU,iBAAiBH,EAAMyD,MACtC,yBAAKtD,UAAU,iBAAiBH,EAAMtD,MACtC,wBAAI+D,MAAO,CAACgB,MAAO,QAASW,MAAO,Y,YC4C/C,IAuBezC,gBAvBS,SAAAL,GACpB,MAAO,CACHhD,MAAOgD,EAAMhD,MACb0B,GAAIsB,EAAMJ,MAAMlB,GAChBY,KAAMU,EAAMT,aAIO,SAAA7B,GACvB,MAAO,CACH8B,YAAa,SAACd,GAAD,OAAQhB,EAAS8B,EAAYd,KAC1CgB,SAAU,SAACC,GAAD,OAASjC,EAASgC,EAASC,QAY9BU,EApEf,SAAkBK,GAAQ,IAAD,EACS+C,mBAAS,IADlB,mBACdW,EADc,KACLC,EADK,KAiCrB,OACI,6BACI,0BAAMxD,UAAU,WAAWyD,SAhCd,SAACC,GAElB,GADAA,EAAEC,iBACE9D,EAAM1D,MAAMoF,OAAS,GAAK1B,EAAMpB,KAAK8C,OAAS,EAC9C,IACIlF,MAAMnB,EAAW,UAAW,CACxBG,OAAQ,OACRiB,KAAM,OACNhB,QAAS,CACL,cAAgB,UAAhB,OAA2BuE,EAAM1D,OACjC,eAAgB,oBAEpBI,KAAMC,KAAKC,UAAU,CACjBoB,GAAIgC,EAAMhC,GACV0F,QAASA,EACTD,KAAMzD,EAAMpB,SAEjBmF,MAAK,WACJ/D,EAAMlB,YAAYkB,EAAMhC,IACxB2F,EAAW,OAGnB,MAAOK,GACHvG,QAAQW,IAAI,IAAIC,MAAM2F,SAI1BhE,EAAMhB,SAAS,4BAOX,8BAAUmB,UAAU,gBAAgBvB,KAAK,GAAGZ,GAAG,GAAGiG,KAAK,KAAKC,KAAK,IAAI1D,MAAOkD,EAASrD,YAAY,qBAC7FC,SAAU,SAAAuD,GAAC,OAAIF,EAAWE,EAAEM,OAAO3D,UAEvC,4BAAQL,UAAU,gBAAgBjD,KAAK,UAAvC,uBCNhB,IAWeyC,gBAXS,SAAAL,GACpB,MAAO,CACHP,SAAUO,EAAMP,YASgB,KAAzBY,EA5Cf,SAAqBK,GAAQ,IACjBjB,EAAaiB,EAAbjB,SADgB,EAEMgE,mBAAS,GAFf,mBAEjBqB,EAFiB,KAERC,EAFQ,OAGQtB,mBAAS,IAHjB,mBAGjBuB,EAHiB,KAGPC,EAHO,KAgBxB,OAXArB,qBAAU,WAENqB,EADuBxF,EACIyF,aAC5B,CAACzF,IASA,yBAAKoB,UAAU,eACVH,EAAMjB,SAAS2C,OAAS,EACrB4C,EAASG,MAAM,EAAGL,GACb9C,KAAI,SAAAvD,GAAC,OAAI,kBAAC,GAAD,CAASwD,IAAKxD,EAAE2G,IAAKjB,KAAM1F,EAAE0F,KAAM/G,KAAMqB,EAAE2F,kBAEzDlC,EAEH8C,EAAS5C,QAAU,GAAK0C,GAAWE,EAAS5C,YAASF,EAClD,4BAAQrB,UAAU,mBAAmBQ,QAf1B,WACfyD,EAAUpE,EAAMjB,SAAS2C,QACzB2C,EAAWD,EAAU,KAajB,sBAGJ,kBAAC,GAAD,UC0DZ,IAkCezE,gBAlCS,SAACL,GACvB,MAAO,CACLJ,MAAOI,EAAMJ,MAAMA,MACnBO,UAAU,YAAKH,EAAMG,WACrBpC,QAASiC,EAAMJ,MAAM7B,QACrBsH,QAASrF,EAAMJ,MAAMlB,GACrBe,SAAUO,EAAMP,SAChBzC,MAAOgD,EAAMhD,UAIU,SAACU,GAC1B,MAAO,CACLiE,OAAQ,SAACrD,EAAMtB,EAAOC,GAAd,OAAuBS,EAASW,EAAUC,EAAMtB,EAAOC,KAC/D2E,OAAQ,SAAClD,GAAD,OAAQhB,EAASmB,EAASH,KAClCc,YAAa,SAACd,GAAD,OAAQhB,EAAS8B,EAAYd,KAC1CgB,SAAU,SAACC,GAAD,OAASjC,EAASgC,EAASC,QAkB1BU,EAtHf,SAAeK,GAAQ,IAAD,EACU+C,oBAAS,GADnB,mBACb6B,EADa,KACJC,EADI,KAkBpB,OAhBA3B,qBAAU,WACR,IAAKlD,EAAM2E,QAAS,CAClB,IAAI3G,EAAKhD,OAAOC,SAAS6J,SAASC,MAAM,KAAKC,MAC7ChF,EAAMkB,OAAOlD,GACbgC,EAAMlB,YAAYd,MAEnB,CAACgC,IAWF,yBAAKG,UAAU,YACZH,EAAM3C,QACL,yBACE8C,UAAU,SACVM,MAAO,CAAEW,OAAQ,OAAQC,UAAW,WAGpC,yBAAKlB,UAAU,kBACb,yBACEA,UAAU,sBACV2B,IAAK9B,EAAMd,MAAMyC,WAAWI,YAAYC,OACxCC,IAAI,KAEN,yBAAK9B,UAAU,wBACb,wBAAIA,UAAU,cAC4CqB,IAAvDxB,EAAMP,UAAU3B,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOgC,EAAMd,MAAMlB,MAC9C,uBACEmC,UAAU,cACVM,MAAO,CAAEgB,MAAO,SAAUf,OAAQ,WAClCC,QAAS,WACoB,IAAvBX,EAAM1D,MAAMoF,OACd1B,EAAMhB,SAAS,6BAGfgB,EAAMiB,OAAOjB,EAAMd,MAAOc,EAAM1D,MAAO0D,EAAMP,cAKjD,uBACEU,UAAU,cACVM,MAAO,CAAEgB,MAAO,SAAUf,OAAQ,WAClCC,QAAS,WACPX,EAAMiB,OAAOjB,EAAMd,MAAOc,EAAM1D,MAAO0D,EAAMP,cAIpDO,EAAMd,MAAMyC,WAAWC,gBAE1B,6CAAmB5B,EAAMd,MAAMyC,WAAWU,eAC1C,+CAAqBrC,EAAMd,MAAMyC,WAAWsD,gBAC5C,0CAAgBjF,EAAMd,MAAMyC,WAAWuD,WACvC,kDAAwBlF,EAAMd,MAAMyC,WAAWwD,cAC/C,sCAAYnF,EAAMd,MAAMyC,WAAWyD,QAEnC,uBAAGjF,UAAU,WAAWnC,GAAIgC,EAAMd,MAAMlB,GAAK,QAA7C,aAGA,2BAAIgC,EAAMd,MAAMyC,WAAW0D,UAC3B,4BAAQlF,UAAU,mBAAmBQ,QA1D7B,WAClBkE,GAAW,KAyDD,kBAIDD,EACC,yBAAK5G,GAAG,WAAWmC,UAAU,gCAAgCQ,QA3DtD,WACjBkE,GAAW,KA2DC,4BAAQ3F,MAAM,UAAU4C,IvB7Db,iCuB6DgC9B,EAAMd,MAAMyC,WAAW2D,iBAClE,uBAAGnF,UAAU,kBACN,+BAGjB,kBAAC,GAAD,U,YCzBN,IAceR,eAAQ,MAdI,SAAA3C,GACvB,MAAO,CACHyB,SAAU,SAACnC,GAAD,OAAWU,EAASyB,EAASnC,KACvC0C,SAAU,SAACC,GAAD,OAASjC,EAASgC,EAASC,KACrCsG,YAAa,SAACjJ,GAAD,OAAWU,EAAS0B,EAAepC,QAUzCqD,EAnEf,SAAmBK,GAAQ,IAAD,EACU+C,mBAAS,IADnB,mBACfyC,EADe,KACLC,EADK,OAEU1C,mBAAS,IAFnB,mBAEf2C,EAFe,KAELC,EAFK,OAGY5C,mBAAS,IAHrB,mBAGf6C,EAHe,KAGJC,EAHI,KAIlBC,EAAUC,cAERC,EAAY,uCAAG,WAAOnC,GAAP,iBAAA5G,EAAA,yDACjB4G,EAAEC,mBACE0B,EAAS9D,OAAS,GAAKgE,EAAShE,OAAS,GAAKgE,IAAaE,GAF9C,0CAIUpJ,MAAMnB,EAAW,aAAc,CAC9CG,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBiB,KAAMC,KAAKC,UAAU,CAAEqJ,KAAMT,EAAUU,GAAIN,MATtC,cAIHjH,EAJG,gBAWWA,EAAKpB,OAXhB,QAWHjB,EAXG,QAYEA,OAIP0D,EAAMvB,SAASnC,EAAMA,OACrB0D,EAAMuF,YAAYjJ,EAAMA,OACxBiG,SAASC,OAAT,gBAA2BlG,EAAMA,OACjCwJ,EAAQ5H,KAAK,uBANb8B,EAAMhB,SAAS1C,EAAM6J,SAbhB,kDAuBT1I,QAAQW,IAAI,IAAIC,MAAJ,OAvBH,gCA0BTqH,IAAaE,GACjB5F,EAAMhB,SAAS,iCA3BF,0DAAH,sDA+BlB,OACI,yBAAKmB,UAAU,aACX,0BAAMyD,SAAUoC,EAAc7F,UAAU,WACpC,2BAAOiG,QAAQ,YAAf,uBACA,2BAAOjG,UAAU,mBAAmBjD,KAAK,OAAOmD,YAAY,cAAcrC,GAAG,WAAWsC,SAAU,SAAAuD,GAAC,OAAI4B,EAAY5B,EAAEM,OAAO3D,QAAQ6F,UAAQ,IAC5I,2BAAOD,QAAQ,YAAf,uBACA,2BAAOjG,UAAU,mBAAmBjD,KAAK,WAAWmD,YAAY,cAAcrC,GAAG,WAAWsC,SAAU,SAAAuD,GAAC,OAAI8B,EAAY9B,EAAEM,OAAO3D,QAAQ6F,UAAQ,IAChJ,2BAAOD,QAAQ,aAAf,wBACA,2BAAOjG,UAAU,mBAAmBjD,KAAK,WAAWmD,YAAY,qBAAqBrC,GAAG,YAAYsC,SAAU,SAAAuD,GAAC,OAAIgC,EAAahC,EAAEM,OAAO3D,QAAQ6F,UAAQ,IACzJ,4BAAQlG,UAAU,oBAAoBjD,KAAK,UAA3C,UACA,kBAAC,IAAD,CAAM2E,GAAG,2BAA2B1B,UAAU,qBAA9C,a,MCAhB,IAeeR,eAAQ,MAfI,SAAA3C,GACvB,MAAO,CACHyB,SAAU,SAACnC,GAAD,OAAWU,EAASyB,EAASnC,KACvCiJ,YAAa,SAACjJ,GAAD,OAAWU,EAAS0B,EAAepC,KAChD0C,SAAU,SAACC,GAAD,OAASjC,EAASgC,EAASC,QAW9BU,EAhEf,SAAqBK,GAAQ,IAAD,EACA+C,mBAAS,IADT,mBACjBnE,EADiB,KACX0H,EADW,OAEJvD,mBAAS,IAFL,mBAEjBmD,EAFiB,KAEbK,EAFa,KAGpBT,EAAUC,cAERC,EAAY,uCAAG,WAAOnC,GAAP,iBAAA5G,EAAA,6DACjB4G,EAAEC,iBADe,kBAGMtH,MAAMnB,EAAW,cAAe,CAC/CG,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdiB,KAAMC,KAAKC,UAAU,CACjBqJ,KAAMrH,EACNsH,GAAIA,MAXC,cAGPvH,EAHO,gBAcOA,EAAKpB,OAdZ,QAcPjB,EAdO,QAeFA,OAIP0D,EAAMvB,SAASnC,EAAMA,OACrB0D,EAAMuF,YAAYjJ,EAAMA,OACxBiG,SAASC,OAAT,gBAA2BlG,EAAMA,MAAjC,6BACAwJ,EAAQ5H,KAAK,uBANb8B,EAAMhB,SAAS1C,EAAM6J,SAhBZ,kDA0Bb1I,QAAQW,IAAI,IAAIC,MAAJ,OA1BC,0DAAH,sDA8BlB,OACI,yBAAK8B,UAAU,eACX,0BAAMyD,SAAUoC,EAAc7F,UAAU,WACpC,2BAAOiG,QAAQ,aAAf,uBACA,2BAAOjG,UAAU,iBAAiBjD,KAAK,OAAOc,GAAG,YAAYqC,YAAY,cAAcC,SAAU,SAAAuD,GAAC,OAAIyC,EAAQzC,EAAEM,OAAO3D,QAAQ6F,UAAQ,IACvI,2BAAOD,QAAQ,WAAf,uBACA,2BAAOjG,UAAU,iBAAiBjD,KAAK,WAAWc,GAAG,UAAUqC,YAAY,cAAcC,SAAU,SAAAuD,GAAC,OAAI0C,EAAM1C,EAAEM,OAAO3D,QAAQ6F,UAAQ,IACvI,4BAAQnJ,KAAK,SAASiD,UAAU,gBAAhC,SACA,kBAAC,IAAD,CAAM0B,GAAG,kCAAkC1B,UAAU,gBAArD,wB,MClChB,IAiBeR,gBAjBS,SAAAL,GACpB,MAAO,CACH5B,MAAO4B,EAAM5B,UAIM,SAAAV,GACvB,MAAO,CACHwJ,SAAU,SAACvH,GAAD,OAASjC,EAASgC,EAASC,QAS9BU,EA5Bf,SAAsBK,GAClB,OACI,yBAAKG,UAAU,QAAQQ,QAAS,kBAAMX,EAAMwG,SAAS,MACjD,yBAAKrG,UAAU,gBACX,0BAAMA,UAAU,sBAAhB,UAA6CH,EAAMtC,OACnD,4BAAQyC,UAAU,oBAAoBQ,QAAS,kBAAMX,EAAMwG,SAAS,MAApE,WCkEhB,IA6Be7G,gBA7BS,SAACL,GACvB,MAAO,CACLqF,QAASrF,EAAMJ,MAAMlB,GACrBY,KAAMU,EAAMT,SACZtC,KAAM+C,EAAMG,UACZnD,MAAOgD,EAAMhD,MACboB,MAAO4B,EAAM5B,UAIU,SAAAV,GACzB,MAAO,CACLyB,SAAU,SAACnC,GAAD,OAAWU,EAASyB,EAASnC,KACvCiJ,YAAa,SAACjJ,GAAD,OAAWU,EAAS0B,EAAepC,KAChDmK,QAAS,SAACnK,GAAD,OAAWU,EvB/BI,SAACV,GACzB,8CAAO,WAAMU,GAAN,iBAAAC,EAAA,+EAEoBT,MAAMnB,EAAW,YAAa,CAC7CG,OAAQ,MACRC,QAAS,CACL,cAAgB,UAAhB,OAA2Ba,MALpC,cAEOqC,EAFP,gBAQoBA,EAAKpB,OARzB,OAQOhB,EARP,OASCS,EAAS,CACLE,KAnEa,gBAoEbC,QAASZ,EAAKA,OAXnB,kDAeCkB,QAAQW,IAAI,IAAIC,MAAJ,OAfb,0DAAP,sDuB8B6BqI,CAAapK,QAe/BqD,EAzFf,SAAaK,GAAQ,IACXvB,EAAiDuB,EAAjDvB,SAAU8G,EAAuCvF,EAAvCuF,YAAakB,EAA0BzG,EAA1ByG,QAASnK,EAAiB0D,EAAjB1D,MAAOoB,EAAUsC,EAAVtC,MAD7B,EAGcqF,oBAAS,GAHvB,mBAGX4D,EAHW,KAGDC,EAHC,KA6BlB,OAxBA1D,qBAAU,WACR,IAAIV,EAASD,SAASC,OAAOuC,MAAM,KACjB,UAAdvC,EAAO,IAAkBA,EAAO,GAAGd,OAAS,IAC9CjD,EAAS+D,EAAO,IAChB+C,EAAY/C,EAAO,OAEpB,CAAC/D,EAAU8G,IAEdrC,qBAAU,WACJ5G,EAAMoF,OAAS,GACjB+E,EAAQnK,KAET,CAACA,EAAOmK,IAEXvD,qBAAU,WACJxF,EAAMgE,OAAS,EACjBkF,GAAY,GAGZA,GAAY,KAEb,CAAClJ,IAIF,yBAAKyC,UAAU,QACb,kBAAC,IAAD,KACE,kBAAC,GAAD,MACCwG,EAAW,kBAAC,GAAD,WAAmBnF,EAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,sBAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gCAChB,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,iCAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mCAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,4BAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAM,sBAAwB9G,EAAM2E,SACzC,kBAAC,GAAD,aC1DNqC,GAAQC,YAAY9H,EAAa+H,YAAgBC,IAAQC,MAE/DC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAAOA,IAChB,kBAAC,GAAD,QAGHzE,SAASiF,eAAe,S7B+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5D,MAAK,SAAA6D,GACJA,EAAaC,gBAEdC,OAAM,SAAApK,GACLD,QAAQC,MAAMA,EAAMyI,c","file":"static/js/main.20208a0a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const queryParts = {\r\n    apiURL: 'https://kitsu.io/api/edge/anime?',\r\n    nameSearch: '&filter[text]=',\r\n    idSearch: '&filter[id]=',\r\n    topRated: '&sort=ratingRank',\r\n    mostPop: '&sort=popularityRank',\r\n    topAir: '&filter[status]=current&sort=popularityRank',\r\n    resultsNum: 12,\r\n    pageLim: '&page[limit]=',\r\n    pageOff: '&page[offset]=',\r\n    categories: 'https://kitsu.io/api/edge/categories?sort=-totalMediaCount&page[limit]=60&page[offset]=0',\r\n    filter: '&fields[anime]=id,posterImage,titles,canonicalTitle,averageRating,popularityRank,ageRating,episodeCount,status,synopsis',\r\n    categSearch: 'filter[categories]=',\r\n    idFilter: 'https://kitsu.io/api/edge/anime?&filter[id]=',\r\n    youtFilter: ',youtubeVideoId'\r\n};\r\n\r\n//export const myApiEND = 'http://localhost:5000/';\r\n\r\nexport const myApiEND = 'https://simple-anime-searcher.herokuapp.com/';\r\n\r\nexport const apiEND = queryParts.pageLim + queryParts.resultsNum + queryParts.filter;\r\n\r\nexport const YOUTUBE_URL = 'https://www.youtube.com/embed/';\r\n\r\nexport const sortTypes = {\r\n    byRating: 'topRated',\r\n    byPop: 'mostPop',\r\n    byTopAir: 'topAir'\r\n};\r\n\r\nexport const fetchHeader = {\r\n    method: 'GET',\r\n    headers: {\r\n        'Accept': 'application/vnd.api+json',\r\n        'Content-Type': 'application/vnd.api+json'\r\n    }\r\n};","import { myApiEND } from './constants';\r\n\r\nexport const debounce = (func, delay) => {\r\n\r\n  let inDebounce\r\n  return function () {\r\n    const context = this\r\n    const args = arguments\r\n    clearTimeout(inDebounce)\r\n    inDebounce = setTimeout(() => func.apply(context, args), delay)\r\n  }\r\n}\r\n\r\nexport const saveFavsToServ = (token, favs) => {\r\n  fetch(myApiEND + 'saveFavs', {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ favs: favs })\r\n  })\r\n}","import { queryParts, fetchHeader, apiEND } from './../constants';\r\nimport { saveFavsToServ } from '../utility';\r\n\r\nexport const GET_MORE = 'GET_MORE';\r\nexport const GET_CATEGORIES = 'GET_CATEGORIES';\r\nexport const TOGGLE_FAVORITE = 'TOGGLE_FAVORITE';\r\nexport const GET_FAV = 'GET_FAV';\r\nexport const GET_ANIME = 'GET_ANIME';\r\nexport const GET_TITLE = 'GET_TITLE';\r\nexport const GET_LOCAL_STR = 'GET_LOCAL_STR';\r\n\r\nexport const getAnime = (query) => {\r\n    const url = queryParts.apiURL + query + apiEND;\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: GET_ANIME,\r\n            payload: {\r\n                data: [],\r\n                url: '',\r\n                pending: true\r\n            }\r\n        })\r\n        try {\r\n            const response = await fetch(url, fetchHeader);\r\n            const json = await response.json();\r\n            dispatch({\r\n                type: GET_ANIME,\r\n                payload: {\r\n                    data: json.data,\r\n                    url: url,\r\n                    pending: false,\r\n                    offset: queryParts.resultsNum,\r\n                }\r\n            })\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n};\r\n\r\nexport const getMore = (url, offset) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: GET_MORE,\r\n            payload: {\r\n                data: [],\r\n                url: '',\r\n                pendingMore: true\r\n            }\r\n        })\r\n        try {\r\n            const response = await fetch(url + queryParts.pageOff + offset, fetchHeader);\r\n            const json = await response.json();\r\n            dispatch({\r\n                type: GET_MORE,\r\n                payload: {\r\n                    data: json.data,\r\n                    url: url,\r\n                    pendingMore: false,\r\n                    offset: offset + queryParts.resultsNum\r\n                }\r\n            })\r\n        }\r\n        catch (e) { console.error(e) };\r\n    }\r\n};\r\n\r\nexport const toggleFav = (item, token, favs) => {\r\n    const newFavs = favs;\r\n    if (!favs.find(i => i.id === item.id)) {\r\n        newFavs.push(item);\r\n        saveFavsToServ(token, newFavs);\r\n        return {\r\n            type: TOGGLE_FAVORITE,\r\n            payload: newFavs\r\n        }\r\n    }\r\n    else {\r\n        saveFavsToServ(token, newFavs.filter(i => i.id !== item.id));\r\n        return {\r\n            type: TOGGLE_FAVORITE,\r\n            payload: newFavs.filter(i => i.id !== item.id)\r\n        }\r\n    }\r\n};\r\n\r\nexport const getLocalStr = () => {\r\n    return {\r\n        type: GET_LOCAL_STR,\r\n        payload: {\r\n            favs: JSON.parse(localStorage.getItem('favs'))\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCateg = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(queryParts.categories, fetchHeader);\r\n            const json = await response.json();\r\n            dispatch({\r\n                type: GET_CATEGORIES,\r\n                payload: json.data\r\n            })\r\n        }\r\n        catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n};\r\n\r\nexport const getTitle = (id) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: GET_TITLE,\r\n            payload: {\r\n                id: id,\r\n                pending: true,\r\n                data: {},\r\n            }\r\n        })\r\n        try {\r\n            const response = await fetch(queryParts.apiURL + queryParts.idSearch + id + queryParts.filter + queryParts.youtFilter, fetchHeader);\r\n            const json = await response.json();\r\n            dispatch({\r\n                type: GET_TITLE,\r\n                payload: {\r\n                    id: id,\r\n                    pending: false,\r\n                    data: json.data[0],\r\n                }\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(new Error(err))\r\n        }\r\n    }\r\n};","import { GET_MORE, GET_ANIME } from \"../actions/actions\";\r\n\r\n\r\nconst initialState = {\r\n    url: '',\r\n    loadedData: [],\r\n    pending: true,\r\n    pendingMore: false,\r\n    offset: 0,\r\n};\r\n\r\nexport const fetcher = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (GET_ANIME):\r\n            return (\r\n                {\r\n                    url: action.payload.url,\r\n                    loadedData: action.payload.data,\r\n                    pending: action.payload.pending,\r\n                    offset: action.payload.offset,\r\n                }\r\n            )\r\n        case (GET_MORE):\r\n            return (\r\n                {\r\n                    url: action.payload.url,\r\n                    loadedData: state.loadedData.concat(action.payload.data),\r\n                    pendingMore: action.payload.pendingMore,\r\n                    offset: action.payload.offset,\r\n                }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n};","import { myApiEND } from './../constants';\r\n\r\nexport const GET_TOKEN = \"GET_TOKEN\";\r\nexport const GET_USER_NAME = 'GET_USER_NAME';\r\nexport const GET_COMMENTS = 'GET_COMMENTS';\r\nexport const GET_FAVORITES = 'GET_FAVORITES';\r\nexport const GET_ERROR = 'GET_ERROR';\r\n\r\n\r\n\r\nexport const getToken = (token) => {\r\n    return {\r\n        type: GET_TOKEN,\r\n        payload: token\r\n    }\r\n};\r\n\r\nexport const getUserByToken = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const resp = await fetch(myApiEND + 'loginByToken', {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            const name = await resp.json();\r\n            dispatch({\r\n                type: GET_USER_NAME,\r\n                payload: name.userName\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(new Error(err));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getComments = (id) => {\r\n    return async dispatch => {\r\n        try {\r\n            const resp = await fetch(myApiEND + 'getComments/' + id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n            const data = await resp.json();\r\n            dispatch({\r\n                type: GET_COMMENTS,\r\n                payload: data.comments\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(new Error(err));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getFavorites = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const resp = await fetch(myApiEND + 'getMyFavs', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            const favs = await resp.json();\r\n            dispatch({\r\n                type: GET_FAVORITES,\r\n                payload: favs.favs\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(new Error(err));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getError = (msg) => {\r\n    return {\r\n        type: GET_ERROR,\r\n        payload: msg,\r\n    }\r\n};","\r\nimport { TOGGLE_FAVORITE } from './../actions/actions';\r\nimport { GET_FAVORITES } from '../actions/myApiActions';\r\n\r\nconst initialState = [];\r\n\r\nexport const favorite = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (TOGGLE_FAVORITE): return action.payload;\r\n        case (GET_FAVORITES): return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { GET_CATEGORIES } from \"../actions/actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const CategoriesFetcher = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (GET_CATEGORIES):\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { GET_TITLE } from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    title: {},\r\n    pending: true,\r\n    id: '',\r\n};\r\n\r\nexport const TitleFetcher = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (GET_TITLE):\r\n            return (\r\n                {\r\n                    id: action.payload.id,\r\n                    pending: action.payload.pending,\r\n                    title: action.payload.data\r\n                }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport { GET_COMMENTS } from './../actions/myApiActions';\r\n\r\nconst initialState = [];\r\n\r\nexport const commentsGetter = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case(GET_COMMENTS): return action.payload;\r\n        default: return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { fetcher } from './Fetcher';\r\nimport { favorite } from './Favorite';\r\nimport { CategoriesFetcher } from './CategoriesFetcher';\r\nimport { TitleFetcher } from './TitleFetcher';\r\nimport { tokenGetter } from './TokenGetter';\r\nimport { userNameGetter } from './userNameGetter';\r\nimport { commentsGetter } from './commentsGetter';\r\nimport { errorHandler } from './ErrorHandler';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    results: fetcher,\r\n    favorites: favorite,\r\n    categories: CategoriesFetcher,\r\n    title: TitleFetcher,\r\n    token: tokenGetter,\r\n    userName: userNameGetter,\r\n    comments: commentsGetter,\r\n    error: errorHandler,\r\n});","\r\nimport { GET_TOKEN } from './../actions/myApiActions';\r\n\r\nconst initialState = '';\r\n\r\nexport const tokenGetter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (GET_TOKEN): return action.payload\r\n        default: return state\r\n    }\r\n};","import { GET_USER_NAME } from \"../actions/myApiActions\";\r\n\r\nconst initialState = '';\r\n\r\nexport const userNameGetter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (GET_USER_NAME): return action.payload\r\n        default: return state\r\n    }\r\n};","import { GET_ERROR } from \"../actions/myApiActions\";\r\n\r\nconst initialState = '';\r\n\r\nexport const errorHandler = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case(GET_ERROR): return action.payload;\r\n        default: return state\r\n    }\r\n}","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAnime } from \"./../../actions/actions\";\r\nimport { queryParts } from \"./../../constants\";\r\nimport { debounce } from \"./../../utility\";\r\nimport \"./ButtonBar.css\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nfunction ButtonBar(props) {\r\n  const searchRef = useRef(null);\r\n  return (\r\n    <div className=\"ButtonBar\" id=\"btnBar\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"ButtonBar__input\"\r\n        ref={searchRef}\r\n        placeholder=\"anime search\"\r\n        onChange={debounce(() => {\r\n          props.getByName(\r\n            queryParts.nameSearch + searchRef.current.value\r\n          );\r\n        }, 1000)}\r\n      />\r\n      <button className=\"ButtonBar__button\" style={{cursor: 'pointer'}} onClick={props.getPop}>\r\n        Most Popular\r\n      </button>\r\n      <button className=\"ButtonBar__button\" style={{cursor: 'pointer'}} onClick={props.getTop}>\r\n        Top Rated\r\n      </button>\r\n      <button className=\"ButtonBar__button\" style={{cursor: 'pointer'}} onClick={props.getAir}>\r\n        Top Airing\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPop: () => dispatch(getAnime(queryParts.mostPop)),\r\n    getTop: () => dispatch(getAnime(queryParts.topRated)),\r\n    getAir: () => dispatch(getAnime(queryParts.topAir)),\r\n    getByName: (name) => dispatch(getAnime(name)),\r\n  };\r\n};\r\n\r\nButtonBar.propTypes = {\r\n  getPop: PropTypes.func,\r\n  getTop: PropTypes.func,\r\n  getAir: PropTypes.func,\r\n  getByName: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ButtonBar);\r\n","import React from 'react'\r\nimport './AnimeCard.css'\r\n\r\nexport default function AnimeCard(props) {\r\n    return (\r\n        <div className='AnimeCard'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMore, toggleFav } from \"../../actions/actions\";\r\nimport AnimeCard from \"./AnimeCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getTitle } from \"./../../actions/actions\";\r\nimport \"./AnimeList.css\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { getComments, getError } from \"../../actions/myApiActions\";\r\n\r\n\r\nfunction AnimeList(props) {\r\n  return (\r\n    <div style={{ backgroundColor: \"#001f3f\" }}>\r\n      <div className=\"AnimeList\">\r\n        {props.pending ? (\r\n          <div\r\n            className=\"loader\"\r\n            style={{ margin: \"auto\", marginTop: \"150px\" }}\r\n          ></div>\r\n        ) : (\r\n            props.results.map((item) => (\r\n              <AnimeCard key={item.id} id={item.id}>\r\n                <h3 className=\"AnimeCard__h3\">\r\n                  {props.favs.find(i => i.id === item.id) === undefined ? (\r\n                    <i\r\n                      className=\"far fa-star\"\r\n                      style={{ color: \"yellow\", cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        if (props.token.length === 0) {\r\n                          props.getError('Login to manage favourites');\r\n                        }\r\n                        else {\r\n                          props.addFav(item, props.token, props.favs);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                  ) : (\r\n                      <i\r\n                        className=\"fas fa-star\"\r\n                        style={{ color: \"yellow\", cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                          props.addFav(item, props.token, props.favs)\r\n                        }}\r\n                      ></i>\r\n                    )}\r\n                  {item.attributes.canonicalTitle}\r\n                </h3>\r\n                <Link to={\"/SimpleAnimeSearch/\" + item.id}>\r\n                  <img\r\n                    className=\"img\"\r\n                    onClick={() => { props.getTit(item.id); props.getComments(item.id) }}\r\n                    src={item.attributes.posterImage.medium}\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n              </AnimeCard>\r\n            ))\r\n          )}\r\n      </div>\r\n      {props.more ? (\r\n        <div className=\"loader\" style={{ margin: \"auto\" }}></div>\r\n      ) : (\r\n          <button\r\n            className=\"AnimeList__btn\"\r\n            style={{ marginTop: \"150px\" }}\r\n            onClick={() => {\r\n              props.getMoreRes(props.url, props.offset);\r\n            }}\r\n          >\r\n            Show More\r\n          </button>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    results: [...state.results.loadedData],\r\n    url: state.results.url,\r\n    favs: [...state.favorites],\r\n    pending: state.results.pending,\r\n    more: state.results.pendingMore,\r\n    offset: state.results.offset,\r\n    token: state.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getMoreRes: (url, offset) => dispatch(getMore(url, offset)),\r\n    addFav: (item, token, favs) => dispatch(toggleFav(item, token, favs)),\r\n    getTit: (id) => dispatch(getTitle(id)),\r\n    getComments: (id) => dispatch(getComments(id)),\r\n    getError: (msg) => dispatch(getError(msg)),\r\n  };\r\n};\r\n\r\nAnimeList.propTypes = {\r\n  results: PropTypes.array,\r\n  url: PropTypes.string,\r\n  favorites: PropTypes.array,\r\n  favIds: PropTypes.array,\r\n  pending: PropTypes.bool,\r\n  more: PropTypes.bool,\r\n  getMoreRes: PropTypes.func,\r\n  addFav: PropTypes.func,\r\n  getTit: PropTypes.func,\r\n  offset: PropTypes.number,\r\n  token: PropTypes.string,\r\n  getComments: PropTypes.func,\r\n  getError: PropTypes.func,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AnimeList);","import React from \"react\";\r\nimport { toggleFav, getTitle } from \"./../../actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Favs.css\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { getComments } from './../../actions/myApiActions';\r\n\r\nfunction FavoriresList(props) {\r\n\r\n  return (\r\n    <div className=\"Favs\">\r\n      <table style={{ borderCollapse: 'collapse', border: 'solid 1px white' }}>\r\n        <tbody>\r\n          <tr style={{ border: 'solid 1px white' }}>\r\n            <td style={{ border: 'solid 1px white' }}>\r\n              Remove\r\n            </td>\r\n            <td style={{ border: 'solid 1px white' }}>\r\n              Title\r\n            </td>\r\n            <td style={{ border: 'solid 1px white' }}>\r\n              Rating\r\n            </td>\r\n          </tr>\r\n          {props.favorites.map((item) => (\r\n            <tr key={item.id} style={{ border: 'solid 1px white' }}>\r\n              <td style={{ border: 'solid 1px white', width: '5vw' }}>\r\n                <i\r\n                  className=\"fas fa-star\"\r\n                  style={{ color: \"yellow\", cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    props.addFav(item, props.token, props.favorites)\r\n                  }}\r\n                ></i>\r\n              </td>\r\n              <td style={{ border: 'solid 1px white', width: '50vw' }}>\r\n                <Link\r\n                  className=\"Favs__card__link\"\r\n                  to={\"/SimpleAnimeSearch/\" + item.id}\r\n                >\r\n                  <h3 className=\"cardH\" onClick={() => {props.getTit(item.id); props.getComments(item.id)}}>\r\n                    {item.attributes.canonicalTitle}\r\n                  </h3>\r\n                </Link>\r\n              </td>\r\n              <td style={{ border: 'solid 1px white', width: '5vw' }}>\r\n                {item.attributes.averageRating}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favorites: [...state.favorites],\r\n    token: state.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addFav: (item, token, favs) => dispatch(toggleFav(item, token, favs)),\r\n    getTit: (id) => dispatch(getTitle(id)),\r\n    getComments: (id) => dispatch(getComments(id))\r\n  };\r\n};\r\n\r\nFavoriresList.propTypes = {\r\n  favorites: PropTypes.array,\r\n  token: PropTypes.string,\r\n  favIds: PropTypes.array,\r\n  toggleFav: PropTypes.func,\r\n  getTit: PropTypes.func,\r\n  getComments: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoriresList);\r\n","import React from 'react';\r\nimport './dropDown.css'\r\n\r\n\r\nfunction Dropdown() {\r\n    const handleLogout = () => {\r\n        document.cookie = 'token=; Expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/SimpleAnimeSearch;';\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className='dropDown'>       \r\n            <button className='dropDown__btn' onClick={handleLogout}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getAnime, getLocalStr, getCateg } from \"./../actions/actions\";\r\nimport { queryParts } from \"./../constants\";\r\nimport \"./Header.css\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport Dropdown from \"./dropDown\";\r\n\r\nfunction Header(props) {\r\n  const [showDropDown, setDropDown] = useState(false)\r\n\r\n  useEffect(() => {\r\n    props.getPop();\r\n    props.getCat();\r\n  }, [props]);\r\n\r\n  const navRef = useRef(null);\r\n\r\n\r\n  const handleHide = () => {\r\n    if (\r\n      navRef.current.className === \"header__nav\") {\r\n      navRef.current.className = \"header__nav--responsive\";\r\n    } else if (\r\n      navRef.current.className === \"header__nav--responsive\") {\r\n      navRef.current.className = \"header__nav\";\r\n    }\r\n  };\r\n\r\n  const handleDropDown = () => {\r\n    showDropDown ? setDropDown(false) : setDropDown(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h3 className=\"header__h3\">\r\n        Simple Anime Search\r\n        <i className=\"fas fa-bars\" id=\"bars\" onClick={handleHide}></i>\r\n        {props.name.length === 0 ?\r\n          <Link to='/SimpleAnimeSearch/login' className='header__Link'>\r\n            <span className='heder__Link__txt'>Login</span>\r\n          </Link> :\r\n          <button className='header__Link' onClick={handleDropDown}>\r\n            <span className='heder__Link__txt'>{props.name}</span>\r\n            <i className=\"fas fa-angle-down\" style={{ margin: '5px' }}></i>\r\n            {showDropDown ? <Dropdown /> : undefined}\r\n          </button>}\r\n      </h3>\r\n      <nav className=\"header__nav\" id=\"nav\" ref={navRef}>\r\n        <Link className=\"header__nav__Link\" to=\"/SimpleAnimeSearch\">\r\n          Discover Anime\r\n        </Link>\r\n        <Link className=\"header__nav__Link\" to=\"/SimpleAnimeSearch/categories\">\r\n          Browse popular categories\r\n        </Link>\r\n        <Link className=\"header__nav__Link\" to=\"/SimpleAnimeSearch/favorites\">\r\n          Favorites\r\n        </Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    name: state.userName,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPop: () => dispatch(getAnime(queryParts.mostPop)),\r\n    getLcStr: () => dispatch(getLocalStr()),\r\n    getCat: () => dispatch(getCateg()),\r\n  };\r\n};\r\n\r\nHeader.propTypes = {\r\n  name: PropTypes.string,\r\n  getPop: PropTypes.func,\r\n  getLcStr: PropTypes.func,\r\n  getCat: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react'\r\nimport { getAnime } from './../../actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { queryParts } from './../../constants';\r\nimport './Categories.css'\r\nimport { PropTypes } from 'prop-types';\r\n\r\nfunction Categories(props) {\r\n    return (\r\n        <div className=\"Cats\">\r\n            {props.categ.map(item =>\r\n                <Link className='Cats__link' key={item.id} to='/SimpleAnimeSearch'\r\n                title={item.attributes.description}\r\n                    onClick={\r\n                        () => props.search(queryParts.categSearch + item.attributes.title + queryParts.mostPop)}>\r\n                    {item.attributes.title}</Link>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categ: state.categories,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        search: (catName) => dispatch(getAnime(catName))\r\n    }\r\n}\r\n\r\nCategories.propTypes = {\r\n    categ: PropTypes.array,\r\n    search: PropTypes.func\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories)","import React from 'react';\r\nimport './comment.css'\r\nimport { PropTypes } from 'prop-types';\r\n\r\nfunction Comment(props) {\r\n    return (\r\n        <div className='comment'>\r\n            <div className='comment__from'>{props.from}</div>\r\n            <div className='comment__body'>{props.body}</div>\r\n            <hr style={{color: 'white', width: '100%'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nComment.propTypes = {\r\n    from: PropTypes.string,\r\n    body: PropTypes.string,\r\n}\r\n\r\nexport default Comment","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './PostForm.css'\r\nimport { useState } from 'react';\r\nimport { myApiEND } from './../../constants';\r\nimport { getComments, getError } from '../../actions/myApiActions';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nfunction PostForm(props) {\r\n    const [comment, setComment] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (props.token.length > 0 && props.name.length > 0) {\r\n            try {\r\n                fetch(myApiEND + 'comment', {\r\n                    method: 'POST',\r\n                    mode: 'cors',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${props.token}`,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        id: props.id,\r\n                        comment: comment,\r\n                        from: props.name\r\n                    })\r\n                }).then(() => {\r\n                    props.getComments(props.id);\r\n                    setComment('');\r\n                })\r\n            }\r\n            catch (err) {\r\n                console.log(new Error(err));\r\n            }\r\n        }\r\n        else {\r\n            props.getError('Login to post comments');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className='PostForm' onSubmit={handleSubmit}>\r\n                <textarea className='PostForm__txt' name=\"\" id=\"\" cols=\"80\" rows=\"5\" value={comment} placeholder='write a comment...'\r\n                    onChange={e => setComment(e.target.value)}\r\n                ></textarea>\r\n                <button className='PostForm__btn' type='submit'>Post a comment</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token,\r\n        id: state.title.id,\r\n        name: state.userName\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getComments: (id) => dispatch(getComments(id)),\r\n        getError: (msg) => dispatch(getError(msg)),\r\n    }\r\n}\r\n\r\nPostForm.propTypes = {\r\n    token: PropTypes.string,\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    getComments: PropTypes.func,\r\n    getError: PropTypes.func,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Comment from './comment';\r\nimport './CommentSec.css'\r\nimport PostForm from './PostForm';\r\nimport { useEffect } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nfunction CommentsSec(props) {\r\n    const { comments } = props\r\n    const [counter, setCounter] = useState(5);\r\n    const [reversed, setReversed] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const clientComments = comments;\r\n        setReversed(clientComments.reverse())\r\n    }, [comments])\r\n\r\n    const handleShowMore = () => {\r\n        if (counter < props.comments.length) {\r\n            setCounter(counter + 5)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='commenstSec'>\r\n            {props.comments.length > 0 ?\r\n                reversed.slice(0, counter)\r\n                    .map(i => <Comment key={i._id} from={i.from} body={i.comment} />)\r\n                :\r\n                undefined\r\n            }\r\n            {reversed.length <= 5 || counter >= reversed.length ? undefined :\r\n                <button className='commentsSec__btn' onClick={handleShowMore}>Show more comments</button>\r\n            }\r\n\r\n            <PostForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        comments: state.comments\r\n    }\r\n}\r\n\r\nCommentsSec.propTypes = {\r\n    comments: PropTypes.array,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(CommentsSec)","import React, { useState} from \"react\";\r\nimport { toggleFav, getTitle } from \"./../actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport \"./Title.css\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { YOUTUBE_URL } from './../constants';\r\nimport { getComments, getError } from \"../actions/myApiActions\";\r\nimport CommentsSec from \"./commentsSec/CommentsSec\";\r\n\r\nfunction Title(props) {\r\n  const [trailer, setTrailer] = useState(false)\r\n  useEffect(() => {\r\n    if (!props.titleId) {\r\n      let id = window.location.pathname.split(\"/\").pop();\r\n      props.getTit(id);\r\n      props.getComments(id);\r\n    }\r\n  }, [props]);\r\n\r\n  const handleWatch = () => {\r\n    setTrailer(true)\r\n  };\r\n\r\n  const handleHide = () => {\r\n    setTrailer(false)\r\n  };\r\n\r\n  return (\r\n    <div className=\"TitleBox\">\r\n      {props.pending ? (\r\n        <div\r\n          className=\"loader\"\r\n          style={{ margin: \"auto\", marginTop: \"150px\" }}\r\n        ></div>\r\n      ) : (\r\n          <div className=\"TitleBox__info\">\r\n            <img\r\n              className=\"TitleBox__info__img\"\r\n              src={props.title.attributes.posterImage.medium}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"TitleBox__info__text\">\r\n              <h3 className=\"cardH\">\r\n                {props.favorites.find(i => i.id === props.title.id) === undefined ? (\r\n                  <i\r\n                    className=\"far fa-star\"\r\n                    style={{ color: \"yellow\", cursor: 'pointer' }}\r\n                    onClick={() => {\r\n                      if (props.token.length === 0) {\r\n                        props.getError('Login to manage favorites');\r\n                      }\r\n                      else {\r\n                        props.addFav(props.title, props.token, props.favorites);\r\n                      }\r\n                    }}\r\n                  ></i>\r\n                ) : (\r\n                    <i\r\n                      className=\"fas fa-star\"\r\n                      style={{ color: \"yellow\", cursor: 'pointer' }}\r\n                      onClick={() => {\r\n                        props.addFav(props.title, props.token, props.favorites);\r\n                      }}\r\n                    ></i>\r\n                  )}\r\n                {props.title.attributes.canonicalTitle}\r\n              </h3>\r\n              <p>Avrage Rating: {props.title.attributes.averageRating}</p>\r\n              <p>Popularity rank: {props.title.attributes.popularityRank}</p>\r\n              <p>Age rating: {props.title.attributes.ageRating}</p>\r\n              <p>Number of episodes: {props.title.attributes.episodeCount}</p>\r\n              <p>Status: {props.title.attributes.status}</p>\r\n\r\n              <p className=\"descHide\" id={props.title.id + \"desc\"}>\r\n                Synopsis:\r\n            </p>\r\n              <p>{props.title.attributes.synopsis}</p>\r\n              <button className='TitleBox__vidBtn' onClick={handleWatch}>\r\n                Watch trailer\r\n              </button>\r\n            </div>\r\n            {trailer ?\r\n              <div id='watchBox' className='TitleBox__vidContainer--watch' onClick={handleHide}>\r\n                <iframe title=\"trailer\" src={YOUTUBE_URL + props.title.attributes.youtubeVideoId}></iframe>\r\n                <i className=\"fas fa-times\"></i>\r\n              </div> : <div></div>}\r\n          </div>\r\n        )}\r\n      <CommentsSec />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    title: state.title.title,\r\n    favorites: [...state.favorites],\r\n    pending: state.title.pending,\r\n    titleId: state.title.id,\r\n    comments: state.comments,\r\n    token: state.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addFav: (item, token, favs) => dispatch(toggleFav(item, token, favs)),\r\n    getTit: (id) => dispatch(getTitle(id)),\r\n    getComments: (id) => dispatch(getComments(id)),\r\n    getError: (msg) => dispatch(getError(msg)),\r\n  };\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.object,\r\n  favorites: PropTypes.array,\r\n  favIds: PropTypes.array,\r\n  pending: PropTypes.bool,\r\n  titleId: PropTypes.string,\r\n  addFav: PropTypes.func,\r\n  getTit: PropTypes.func,\r\n  getComments: PropTypes.func,\r\n  comments: PropTypes.array,\r\n  token: PropTypes.string,\r\n  getError: PropTypes.func\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Title);\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { getToken, getError, getUserByToken } from '../../actions/myApiActions';\r\nimport { connect } from 'react-redux';\r\nimport { myApiEND } from './../../constants';\r\nimport './RegWindow.css'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types';\r\n\r\n\r\n\r\nfunction RegWindow(props) {\r\n    const [nickname, setNickname] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [password2, setPassword2] = useState('');\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (nickname.length > 0 && password.length > 0 && password === password2) {\r\n            try {\r\n                const resp = await fetch(myApiEND + 'createUser', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ user: nickname, pw: password2 })\r\n                })\r\n                const token = await resp.json();\r\n                if (!token.token) {\r\n                    props.getError(token.message);\r\n                }\r\n                else {\r\n                    props.getToken(token.token);\r\n                    props.getUserName(token.token)\r\n                    document.cookie = `token=${token.token}`;\r\n                    history.push('/SimpleAnimeSearch')\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(new Error(err));\r\n            }\r\n        }\r\n        else if(password !== password2) {\r\n            props.getError('password entries should match')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='RegWindow'>\r\n            <form onSubmit={handleSubmit} className='RegForm'>\r\n                <label htmlFor=\"nickname\">Enter your nickname</label>\r\n                <input className='RegWindow__input' type=\"text\" placeholder='nickname...' id='nickname' onChange={e => setNickname(e.target.value)} required />\r\n                <label htmlFor=\"password\">Enter your password</label>\r\n                <input className='RegWindow__input' type=\"password\" placeholder='password...' id='password' onChange={e => setPassword(e.target.value)} required />\r\n                <label htmlFor=\"password2\">Repeat your password</label>\r\n                <input className='RegWindow__input' type=\"password\" placeholder='repeat password...' id='password2' onChange={e => setPassword2(e.target.value)} required />             \r\n                <button className='RegWindow__button' type='submit'>Submit</button>\r\n                <Link to='/SimpleAnimeSearch/login' className='RegWindow__button'>Back</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: (token) => dispatch(getToken(token)),\r\n        getError: (msg) => dispatch(getError(msg)),\r\n        getUserName: (token) => dispatch(getUserByToken(token)),\r\n    }\r\n}\r\n\r\nRegWindow.propTypes = {\r\n    getToken: PropTypes.func,\r\n    getError: PropTypes.func,\r\n    getUserName: PropTypes.func,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(RegWindow)","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { myApiEND } from './../../constants';\r\nimport { getToken, getUserByToken, getError } from '../../actions/myApiActions';\r\nimport { connect } from 'react-redux';\r\nimport './LoginWindow.css'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nfunction LoginWindow(props) {\r\n    const [name, setName] = useState('');\r\n    const [pw, setPw] = useState('');\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const resp = await fetch(myApiEND + 'loginByCred', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    user: name,\r\n                    pw: pw\r\n                })\r\n            })\r\n            const token = await resp.json();\r\n            if (!token.token) {\r\n                props.getError(token.message);\r\n            }\r\n            else {\r\n                props.getToken(token.token);\r\n                props.getUserName(token.token);\r\n                document.cookie = `token=${token.token}; path=/SimpleAnimeSearch`;\r\n                history.push('/SimpleAnimeSearch')\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(new Error(err));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='LoginWindow'>\r\n            <form onSubmit={handleSubmit} className='LogForm'>\r\n                <label htmlFor=\"loginName\">Enter your nickname</label>\r\n                <input className='LogForm__input' type=\"text\" id='loginName' placeholder='nickname...' onChange={e => setName(e.target.value)} required />\r\n                <label htmlFor=\"loginPw\">Enter your password</label>\r\n                <input className='LogForm__input' type=\"password\" id='loginPw' placeholder='password...' onChange={e => setPw(e.target.value)} required />\r\n                <button type='submit' className='LogForm__btn'>Login</button>\r\n                <Link to='/SimpleAnimeSearch/registration' className='LogForm__btn'> Create account</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: (token) => dispatch(getToken(token)),\r\n        getUserName: (token) => dispatch(getUserByToken(token)),\r\n        getError: (msg) => dispatch(getError(msg))\r\n    }\r\n}\r\n\r\nLoginWindow.propTypes = {\r\n    getToken: PropTypes.func,\r\n    getUserName: PropTypes.func,\r\n    getError: PropTypes.func,\r\n\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginWindow)","import React from 'react';\r\nimport './MessageModal.css'\r\nimport { getError } from '../../actions/myApiActions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types';\r\n\r\n\r\nfunction MessageModal(props) {\r\n    return (\r\n        <div className='frame' onClick={() => props.setError('')}>\r\n            <div className='messageModal'>\r\n                <span className='messageModal__body'>ERROR: {props.error}</span>\r\n                <button className='messageModal__btn' onClick={() => props.setError('')}>Ok</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.error,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setError: (msg) => dispatch(getError(msg)),\r\n    }\r\n};\r\n\r\nMessageModal.propTypes = {\r\n    error: PropTypes.string,\r\n    setError: PropTypes.func,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageModal);","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport ButtonBar from \"./ButtonBar/ButtonBar\";\r\nimport AnimeList from \"./List/AnimeList\";\r\nimport FavoritesList from \"./List/FavoritesList\";\r\nimport Header from \"./Header\";\r\nimport Categories from \"./List/Categories\";\r\nimport Title from \"./Title\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./App.css\";\r\nimport RegWindow from \"./auth/RegWindow\";\r\nimport { useEffect } from \"react\";\r\nimport { getToken, getUserByToken, getFavorites } from \"../actions/myApiActions\";\r\nimport LoginWindow from \"./auth/LoginWindow\";\r\nimport { useState } from \"react\";\r\nimport MessageModal from './messageModal/MessageModal';\r\n\r\nfunction App(props) {\r\n  const { getToken, getUserName, getFavs, token, error } = props;\r\n\r\n  const [errModal, setErrModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let cookie = document.cookie.split('=');\r\n    if (cookie[0] === 'token' && cookie[1].length > 0) {\r\n      getToken(cookie[1]);\r\n      getUserName(cookie[1]);\r\n    }\r\n  }, [getToken, getUserName]);\r\n\r\n  useEffect(() => {\r\n    if (token.length > 0) {\r\n      getFavs(token);\r\n    }\r\n  }, [token, getFavs]);\r\n\r\n  useEffect(() => {\r\n    if (error.length > 0) {\r\n      setErrModal(true);\r\n    }\r\n    else {\r\n      setErrModal(false);\r\n    }\r\n  }, [error]);\r\n\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <BrowserRouter>\r\n        <Header />\r\n        {errModal ? <MessageModal /> : undefined}\r\n        <Switch>\r\n          <Route exact path=\"/SimpleAnimeSearch\">\r\n            <ButtonBar />\r\n            <AnimeList />\r\n          </Route>\r\n          <Route exact path=\"/SimpleAnimeSearch/favorites\">\r\n            <FavoritesList />\r\n          </Route>\r\n          <Route exact path=\"/SimpleAnimeSearch/categories\">\r\n            <Categories />\r\n          </Route>\r\n          <Route exact path=\"/SimpleAnimeSearch/registration\">\r\n            <RegWindow />\r\n          </Route>\r\n          <Route exact path=\"/SimpleAnimeSearch/login\">\r\n            <LoginWindow />\r\n          </Route>\r\n          <Route path={\"/SimpleAnimeSearch/\" + props.titleId}>\r\n            <Title />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    titleId: state.title.id,\r\n    name: state.userName,\r\n    favs: state.favorites,\r\n    token: state.token,\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getToken: (token) => dispatch(getToken(token)),\r\n    getUserName: (token) => dispatch(getUserByToken(token)),\r\n    getFavs: (token) => dispatch(getFavorites(token))\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  titleId: PropTypes.string,\r\n  name: PropTypes.string,\r\n  favs: PropTypes.array,\r\n  token: PropTypes.string,\r\n  error: PropTypes.string,\r\n  getToken: PropTypes.func,\r\n  getUserName: PropTypes.func,\r\n  getFavs: PropTypes.func\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport App from './Components/App';\n\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n     <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}